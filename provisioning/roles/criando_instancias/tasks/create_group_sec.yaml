- name: Criando Sec Group - AWS
  ec2_group:
    name: "{{ sec_group_name }}"
    description: Sec Group Curso Ansible
    profile: "{{ aws_profile }}"
    region: "{{ region_aws }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
        rule_desc: Acesso Externo SSH
      - proto: tcp
        from_port: 2379
        to_port: 2380
        group_name: "{{ sec_group_name }}"
        rule_desc: ETCD Server API
      - proto: tcp
        from_port: 6443
        to_port: 6443
        group_name: "{{ sec_group_name }}"
        rule_desc: API Kubernetes
      - proto: tcp
        from_port: 10250
        to_port: 10250
        group_name: "{{ sec_group_name }}"
        rule_desc: Kubelet API
      - proto: tcp
        from_port: 10251
        to_port: 10251
        group_name: "{{ sec_group_name }}"
        rule_desc: Kubelet Scheduler
      - proto: tcp
        from_port: 10252
        to_port: 10252
        group_name: "{{ sec_group_name }}"
        rule_desc: Kubelet Controller manager
      - proto: tcp
        from_port: 10255
        to_port: 10255
        group_name: "{{ sec_group_name }}"
        rule_desc: Kubelet API Read-only
      - proto: tcp
        from_port: 30000
        to_port: 32767
        cidr_ip: 0.0.0.0/0
        rule_desc: NodePort Services
      - proto: tcp
        from_port: 6783
        to_port: 6783
        group_name: "{{ sec_group_name }}"
        rule_desc: WeaveNet
      - proto: udp
        from_port: 6783
        to_port: 6783
        group_name: "{{ sec_group_name }}"
        rule_desc: WeaveNet
      - proto: udp
        from_port: 6784
        to_port: 6784
        group_name: "{{ sec_group_name }}"
        rule_desc: WeaveNet
    rules_egress: # Saída de internet das máquinas
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: basic_firewall # Defini o nome das regras de firewall
